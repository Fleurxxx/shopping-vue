<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace用于指定当前的映射文件和哪个接口进行映射,需要指定接口的文件路径,路径需要是包的完整路径结构-->
<mapper namespace="com.example.springboot.mapper.UserMapper">

<!--    id:表示给这个映射规则分配一个唯一的id值,对应的就是resultMap="id属性值"
        type:取值是一个类,表示数据库中的查询结果与java中哪个实体类进行结果集的映射 -->
    <resultMap id="UserEntityMap" type="com.example.springboot.bean.po.User">
        <!-- column属性:表示表中的字段名称
             property属性:表示类中的属性名称 -->
        <id column="uid" property="uid"></id>
        <result column="created_user" property="createdUser"></result>
        <result column="created_time" property="createdTime"></result>
        <result column="modified_user" property="modifiedUser"></result>
        <result column="modified_time" property="modifiedTime"></result>
    </resultMap>

    <!--    注册插入用户信息-->
    <insert id="addUser" useGeneratedKeys="true" keyProperty="uid">
        insert into user(
        username,email,password,salt,phone,birthday,gender,image,introduce,types,state,
        created_user,created_time,modified_user,modified_time
        ) values (
        #{username},#{email},#{password},#{salt},#{phone},#{birthday},#{gender},#{image},#{introduce},#{types},#{state},
        #{createdUser},#{createdTime},#{modifiedUser},#{modifiedTime}
        )
    </insert>

    <!--    查找用户名是否重复 -->
    <select id="findByUsername"  resultMap="UserEntityMap">
        SELECT * FROM user where username=#{username}
    </select>

    <!--    查找邮箱是否重复 -->
    <select id="findByEmail" resultMap="UserEntityMap">
        SELECT * FROM user WHERE email=#{email}
    </select>

    <!--    根据用户的uid查询用户的数据-->
    <select id="findByUid"  resultMap="UserEntityMap">
        SELECT * FROM user WHERE uid=#{uid}
    </select>

    <!--    根据用户的uid来修改用户密码-->
    <update id="updatePasswordByUid" >
        UPDATE user SET password=#{password},modified_user=#{modifiedUser}, modified_time=#{modifiedTime} WHERE uid=#{uid}
    </update>

    <!--    根据用户的uid更新用户的信息-->
    <update id="updateInfoByUid">
        UPDATE user SET
        username=#{username},email=#{email},password=#{password},salt=#{salt},phone=#{phone},birthday=#{birthday},
        gender=#{gender},image=#{image},introduce=#{introduce},types=#{types},state=#{state},
        created_user=#{createdUser},created_time=#{createdTime},modified_user=#{modifiedUser},modified_time=#{modifiedTime}
        WHERE uid=#{uid}
    </update>

    <!--    根据用户uid修改用户的头像 -->
    <update id="updateImgByUid" >
        UPDATE user SET image=#{image},modified_user=#{modifiedUser},modified_time=#{modifiedTime} WHERE uid=#{uid}
    </update>


</mapper>
